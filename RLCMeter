RLCMeter

Измеряем напряжение на элементе и ток на сопротивлении которое последовательно с ним стоит.

R = 1/(2*PI*F*C)
R = (2*PI*F*L)

import math
def RFC(F,C): return 1/(2*math.pi*F*C)
def RFL(F,L): return 2*math.pi*F*L

F = 50 kHz
C = 1 mkF R = 3 Om
C = 1 nF R = 3 KOm
C = 1 pF R = 3 MOm

L = 1 mH R = 3 Om
L = 1 mkH R = 0.3 Om
L = 1 nH R = 0.3 mOm

F = 100 Hz
C = 1000 mkF R = 1.6 Om
C = 100 mkF R = 16 Om

L = 1 KH R = 628 KOm
L = 1 H R = 628 Om
L = 1 mH R = 0.6 Om

Теперь прикинем напряжение, какое можем измерять.
3.3 V напряжение измеряемое ADC
Максимальный коэффициэнт усиления 32
0.1 V при максимальном коэффициэнте
10 mA максимальный ток

100 Om == 0.1 V

Значит предусилитель x10 обязательно нужен.

Возможно лучше таки сделать "инструментальный" вариант, где резисторы переключаются с использованием реле.
74HC4052 c 100 ом проходного сопротивления - это всетаки несколько экстремально.
Это конечно несколько экстенсивно, зато позволит достаточно точно контролировать емкость параллельную сопротивлению.

Перед выходным усилителем таки сделать гальваническую развязку, это позволит избавиться от цепи подгонки постоянной составляющей напряжения.
Гальваническая развязка это не очень хорошо, потому как если будем измерять большое сопротивление, то постоянная составляющая долго может устаканиваться.

По выводам
74HC4052 == 4052
AD8532 == LM358

----------------------------
Пусть резисторы переключаются посредством 74HC4052, это экономично и мало места займет.
Пусть вход инструментального усилителя переключается посредством реле. Возьмем реле с двумя группами контактов.

Питать будем пока от USB, а в дальнейшем от батареек 6 V.
AD8532 - используем как обычные ОУ
AD8221 - инструментальный усилитель, пускай всегда усиливает в 1 и 20 раз.
MCP6S21 - усилитель с программируемым коэффициэнтом усиления 1..32 раза.

300 mV напряжение на выходе усилителей.

---------------------------
- нарисовать схему где есть два инструментальных усилителя для измерения тока и напряжения
- поставить дырки, чтобы подцепляться осциллографом

----------------------------
Перерисовал схему.

--------------

Воспользовался OP07C в качестве усилителя с низким Input Offset Voltage. В буфере/фильтре на выходе генератора частоты. И в "виртуальной земле" на 2.5 V.

Фильтр, который фильтрует DAC оставил того-же третьего порядка. Вроде должно хватать. Если учесть что будем на частоте 1 MHz сигнал генерировать, то там более чем достаточное подавление получается.

Инструментальные усилители все время работают с Ку=10 примерно. Все равно надо усиливать сигнал с 300 мВ до 3 В. Надеемся, что не будет между двумя ADC проникновения сигнала взаимного.

В генераторе тока применил AD825R микросхемку (она не работает от 5 V однополярного)


----------
- Убрать развязку по постоянному току между AD8221 и MCP6S21
- Сделать удобную функцию для запуска DAC с синусом разной частоты. --ok
	Когда минуса нет, то на выход DMA транслируется средняя амплитуда
	F = Fcpu/prescaler/BufferSize
	prescaler min = 30

- проверить, что ровно 600 кгц частоты --ok
	 	1000 samples = 119960
	 	2000 samples = 239949
	 	3000 samples = 359953
	 	получается 120 тактов на сэмпл при частоте 72 мгц
	 	20 тактов чатоты 12 мгц то есть соответствует расчетному 7.5+12.5 clock

- научиться запускать ADC одновременно с DAC --ok

- устанавливать правильную частоту дискретизации для ADC
	- максимальную частоту дискретизации по таймеру нереально установить, лучше прямо запускать
	 	6 сэмплов на 100 кгц
	 	60 сэмплов на 10 кгц
	 	600 сэмплов на 1 кгц
	 	На более низких частотах надо снижать частоту сэмплирования и увеличивать adc sampling time
	 		28.5+12.5 clock = 3.4 us time on 12 mhz
	 	например если будем считать нижней частотой 100 герц, что 100 кгц достаточно

- Сделать функцию для ADC DMA Dual Mode 

- теоретически решить вопрос, достаточно ли 6 точек -- достаточно!!!!
- посмотреть, на сколько получается сдвиг в зависимовти от того, сколько кругов прошло --сдвиг не меняется
- определить частоты на которых можно посчитать фазу/амплитуду
  adc_cycles/FCPU*N - количество секунд, для разрешенной частоты, начинаем с N=6 = 100 кгц
  F = FCPU/(adc_cycles*N)

- переделать установку частоты на такты процессора. --ok
- сделать, чтобы ADC корректно инициализировалось и при частотах ниже 600 герц
- снять данные на разных частотах
	- определить частоты --ok
	- нестабильно запускается ADC
		- попробовать запустить конверсию ADC и когда она закончится, запустить таймер DAC и запретить прерывание --не помогает
		- попробовать откалибровать ADC по выходу DAC и потов вычитать эту цифру

- прикрутить DUAL ADC и считывать/обработать данные с него --ok
- заняться таки железом --ok
	- сделать простешие щупы --ok
	- проверить, что текущая схемка работает
		схема работает, но из-за того что F107 у нас без фильтрации аналогового питания, получилось плохо
		так-же не учли, что REF пины усилителей кушают достаточно прилично

- добавить в Eagle символ STM32F303 для 100 ногого корпуса.
AD8603 имеет такие-же выводы как AD8605

- стандартный ряд сопротивлений
	1 1.2 1.5 1.8 2 2.2 2.4 2.7
	3 3.3 3.9 4.7 5.1 5.6 6.8 7.5 8.2 9.1 
-
	2.5 V, 1.5 V

	(R2+R3)/(R1+R2+R3) = 2.5/5
	(R3)/(R1+R2+R3) = 1.5/5

	R1 = 2.5
	R2 = 1
	R3 = 1.5

	R1 = 100 К
	R2 = 39 K
	R3 = 68 K
	U1 = 2.58 V
	U2 = 1.64 V

- переделать виртуальную землю на 2 LM258, а вход IC3 подключить напрямую к резисторам на 2.5 V ??????
	Проблемм с Voltage Offset быть не должно, так как LM258 усиливает в миллион раз по постоянному току.

	x/(100+x)=1.6/5
	5*x=160+1.6*x
	(5-1.6)*x=160

--------------------------------------------
Переходим на STM32F303
- скомпилировать минимальный проект --ok
- проверить FPU --ok
- прикрутить на новую USB библиотеку --ok
- запустить ADC/DAC --ok
- настроить ADC34, так как у нас для них платка сделана --ok

----------------
- разобраться с установкой резисторов --ok

----------------

- допаяли платку, получили 6 LSB ошибки. 
	Очень важно оказалось разводить аналоговую землю вблизи микроконтроллера,
	через нее шумы проникают очень сильно. Сократили длинну аналогового пина, 
	получилось уменьшить с 9 до 6 LSB ошибку. 

- график задержки фазы по току/напряжению в зависимости от частоты

- управление MCP6S21


